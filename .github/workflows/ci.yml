name: build
on: [push, pull_request]

jobs:

  build:
    name: build
    runs-on: ubuntu-latest
    steps:

    - name: Check out repository code
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: build and push latest image
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      env:
        USERNAME: ${{ secrets.DOCKERHUB_USER }}
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWD }} | docker login -u ${USERNAME} --password-stdin
        echo ${{ secrets.GITPKG_TOKEN }} | docker login ghcr.io -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm64 \
          -t ${USERNAME}/quake3-server:latest \
          -t ghcr.io/${USERNAME}/quake3-server:latest .

    - name: build and push branched image
      if: github.event_name == 'push' && github.ref != 'refs/heads/main'
      env:
        USERNAME: ${{ secrets.DOCKERHUB_USER }}
      run: |
        echo ${{ secrets.DOCKERHUB_PASSWD }} | docker login -u ${USERNAME} --password-stdin
        echo ${{ secrets.GITPKG_TOKEN }} | docker login ghcr.io -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm64 \
          -t ${USERNAME}/quake3-server:${{ github.ref_name }} \
          -t ghcr.io/${USERNAME}/quake3-server:${{ github.ref_name }} .

    - name: build and push tagged image
      if: github.event_name == 'push' && github.event.ref_type == 'tag'
      env:
        USERNAME: ${{ secrets.DOCKERHUB_USER }}
      run: |
        GIT_TAG="${GITHUB_REF#refs/tags/}"
        echo ${{ secrets.DOCKERHUB_PASSWD }} | docker login -u ${USERNAME} --password-stdin
        echo ${{ secrets.GITPKG_TOKEN }} | docker login ghcr.io -u ${USERNAME} --password-stdin
        docker buildx build --push --platform linux/amd64,linux/arm64 \
          -t ${USERNAME}/quake3-server:${GIT_TAG} \
          -t ghcr.io/${USERNAME}/quake3-server:${GIT_TAG} .
